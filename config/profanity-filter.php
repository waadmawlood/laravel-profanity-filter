<?php

return [
    /*
    |--------------------------------------------------------------------------
    | Supported Languages
    |--------------------------------------------------------------------------
    |
    | The list of supported languages for profanity filtering.
    |
    */
    'supported_languages' => ['en', 'fr', 'ar'],

    /*
    |--------------------------------------------------------------------------
    | Languages Match Without Boundaries
    |--------------------------------------------------------------------------
    |
    | The list of languages that match without boundaries.
    | Resources: https://en.wikipedia.org/wiki/Category:Writing_systems_without_word_boundaries
    |
    */
    'languages_match_without_boundaries' => ['ar'],

    /*
    |--------------------------------------------------------------------------
    | Replacement Character
    |--------------------------------------------------------------------------
    |
    | The character to use for replacing profanity.
    |
    */
    'replacement_character' => '*',

    /*
    |--------------------------------------------------------------------------
    | Case Sensitive
    |--------------------------------------------------------------------------
    |
    | Whether the profanity filter should be case sensitive.
    |
    */
    'case_sensitive' => false,

    /*
    |--------------------------------------------------------------------------
    | Detect Leet Speak
    |--------------------------------------------------------------------------
    |
    | Whether to detect and normalize leet speak characters (like @ for a, 3 for e).
    |
    */
    'detect_leet_speak' => true,

    /*
    |--------------------------------------------------------------------------
    | Custom Words
    |--------------------------------------------------------------------------
    |
    | Custom profanity words to add to the filter.
    |
    */
    'custom_words' => [
        'en' => [],
        'fr' => [],
        'ar' => [],
    ],

    /*
    |--------------------------------------------------------------------------
    | Custom Words File Path
    |--------------------------------------------------------------------------
    |
    | The path to the custom words file.
    |
    | example: base_path('resources/lang/en/profanity-words.php')
    | example: storage_path('app/profanity-words.txt')
    | example: public_path('files/profanity-words.json')
    |
    */
    'custom_words_file_path' => [
        'en' => [],
        'fr' => [],
        'ar' => [],
    ],

    /*
    |--------------------------------------------------------------------------
    | Character Substitutions
    |--------------------------------------------------------------------------
    |
    | An array of alpha characters and their possible substitutions.
    |
    |
    */
    'substitutions' => [

        // English
        'a' => ['a', '4', '@', 'Á', 'á', 'À', 'Â', 'à', 'Â', 'â', 'Ä', 'ä', 'Ã', 'ã', 'Å', 'å', 'æ', 'Æ', 'α', 'Δ', 'Λ', 'λ'],
        'b' => ['b', '8', '3', 'ß', 'Β', 'β'],
        'c' => ['c', 'Ç', 'ç', 'ć', 'Ć', 'č', 'Č', '¢', '€', '<', '(', '{', '©'],
        'd' => ['d', ')', 'Þ', 'þ', 'Ð', 'ð'],
        'e' => ['e', '3', '€', 'È', 'è', 'É', 'é', 'Ê', 'ê', 'ë', 'Ë', 'ē', 'Ē', 'ė', 'Ė', 'ę', 'Ę', '∑'],
        'f' => ['f', 'ƒ'],
        'g' => ['g', '6', '9'],
        'h' => ['h', 'Η'],
        'i' => ['i', '!', '|', ']', '[', '1', '∫', 'Ì', 'Í', 'Î', 'Ï', 'ì', 'í', 'î', 'ï', 'ī', 'Ī', 'į', 'Į'],
        'j' => ['j'],
        'k' => ['k', 'Κ', 'κ'],
        'l' => ['l', '!', '|', ']', '[', '£', '∫', 'Ì', 'Í', 'Î', 'Ï', 'ł', 'Ł'],
        'm' => ['m'],
        'n' => ['n', 'η', 'Ν', 'Π', 'ñ', 'Ñ', 'ń', 'Ń'],
        'o' => ['o', '0', 'Ο', 'ο', 'Φ', '¤', '°', 'ø', 'ô', 'Ô', 'ö', 'Ö', 'ò', 'Ò', 'ó', 'Ó', 'œ', 'Œ', 'ø', 'Ø', 'ō', 'Ō', 'õ', 'Õ'],
        'p' => ['p', 'ρ', 'Ρ', '¶', 'þ'],
        'q' => ['q'],
        'r' => ['r', '®'],
        's' => ['s', '5', '\$', '§', 'ß', 'Ś', 'ś', 'Š', 'š'],
        't' => ['t', 'Τ', 'τ'],
        'u' => ['u', 'υ', 'µ', 'û', 'ü', 'ù', 'ú', 'ū', 'Û', 'Ü', 'Ù', 'Ú', 'Ū'],
        'v' => ['v', 'υ', 'ν'],
        'w' => ['w', 'ω', 'ψ', 'Ψ'],
        'x' => ['x', 'Χ', 'χ'],
        'y' => ['y', '¥', 'γ', 'ÿ', 'ý', 'Ÿ', 'Ý'],
        'z' => ['z', 'Ζ', 'ž', 'Ž', 'ź', 'Ź', 'ż', 'Ż'],

        // French
        'à' => ['à', 'á', 'â', 'ä', 'ã', 'å', 'æ', 'α', 'Δ', 'Λ', 'λ'],
        'æ' => ['æ', 'ae'],
        'ç' => ['ç'],
        'è' => ['è'],
        'é' => ['é'],
        'ê' => ['ê'],
        'ë' => ['ë'],
        'î' => ['î'],
        'ï' => ['ï'],
        'ô' => ['ô'],
        'œ' => ['œ'],
        'ù' => ['ù'],
        'û' => ['û'],
        'ü' => ['ü'],
        'ÿ' => ['ÿ'],

        // Arabic
        'ا' => ['ا', 'أ', 'إ', 'آ', '@', 'ٱ', 'ﺍ', 'ﺎ', 'ﺃ', 'ﺄ', 'ﺇ', 'ﺈ', 'ﺁ', 'ﺂ'],
        'ب' => ['ب', 'پ', 'ٮ', 'ﺏ', 'ﺐ', 'ﺑ', 'ﺒ', 'ݕ', 'ݖ', 'ﭒ', 'ﭓ', 'ﭔ', 'ﭕ'],
        'ت' => ['ت', 'ٺ', 'ټ', 'ٹ', 'ة', 'ﺕ', 'ﺖ', 'ﺗ', 'ﺘ', 'ٽ', 'ٿ', 'ٮ', 'ﭞ', 'ﭟ', 'ﭠ', 'ﭡ', 'ﭥ', 'ﭦ', 'ﭧ', 'ﭨ'],
        'ث' => ['ث', 'ٿ', 'ﺙ', 'ﺚ', 'ﺛ', 'ﺜ'],
        'خ' => ['خ', 'ﺥ', 'ﺦ', 'ﺧ', 'ﺨ'],
        'ج' => ['ج', 'چ', 'ڄ', 'ﺝ', 'ﺞ', 'ﺟ', 'ﺠ'],
        'ح' => ['ح', 'ﺡ', 'ﺢ', 'ﺣ', 'ﺤ'],
        'د' => ['د', 'ﺩ', 'ﺪ'],
        'ذ' => ['ذ', 'ڏ', 'ﺫ', 'ﺬ'],
        'ر' => ['ر', 'ﺭ', 'ﺮ'],
        'ز' => ['ز', 'ﺯ', 'ﺰ'],
        'س' => ['س', 'ﺱ', 'ﺲ', 'ﺳ', 'ﺴ'],
        'ش' => ['ش', 'ﺵ', 'ﺶ', 'ﺷ', 'ﺸ'],
        'ص' => ['ص', 'ﺹ', 'ﺺ', 'ﺻ', 'ﺼ'],
        'ض' => ['ض', 'ﺽ', 'ﺾ', 'ﺿ', 'ﻀ'],
        'ط' => ['ط', 'ﻁ', 'ﻂ', 'ﻃ', 'ﻄ'],
        'ظ' => ['ظ', 'ﻅ', 'ﻆ', 'ﻇ', 'ﻈ'],
        'ع' => ['ع', 'ﻉ', 'ﻊ', 'ﻋ', 'ﻌ'],
        'غ' => ['غ', 'ﻍ', 'ﻎ', 'ﻏ', 'ﻐ'],
        'ف' => ['ف', 'ڤ', 'ڥ', 'ڧ', 'ڨ', 'ﻑ', 'ﻒ', 'ﻓ', 'ﻔ'],
        'ق' => ['ق', 'ﻕ', 'ﻖ', 'ﻗ', 'ﻘ'],
        'ك' => ['ك', 'گ', 'ک', 'ﮎ', 'ﮏ', 'ﮐ', 'ﮑ', 'ﻙ', 'ﻚ', 'ﻛ', 'ﻜ'],
        'ل' => ['ل', 'ﻝ', 'ﻞ', 'ﻟ', 'ﻠ'],
        'م' => ['م', 'ﻡ', 'ﻢ', 'ﻣ', 'ﻤ'],
        'ن' => ['ن', 'ﻥ', 'ﻦ', 'ﻧ', 'ﻨ'],
        'ه' => ['ه', 'ة', 'ۀ', 'ھ', 'ﻩ', 'ﻪ', 'ﻫ', 'ﻬ'],
        'و' => ['و', 'ؤ', '9', 'ﻭ', 'ﻮ'],
        'ي' => ['ي', 'ى', 'ی', 'ئ', 'ﻱ', 'ﻲ', 'ﻳ', 'ﻴ'],
    ],

    /*
    |--------------------------------------------------------------------------
    | Character separators
    |--------------------------------------------------------------------------
    |
    | An array of special characters that could be used a separators.
    |
    |
    */
    'separators' => [
        '@',
        '#',
        '%',
        '&',
        '_',
        ';',
        "'",
        '"',
        ',',
        '~',
        '`',
        '|',
        '!',
        '$',
        '^',
        '*',
        '(',
        ')',
        '-',
        '+',
        '=',
        '{',
        '}',
        '[',
        ']',
        ':',
        '<',
        '>',
        '?',
        '.',
        '/',
    ],
];
